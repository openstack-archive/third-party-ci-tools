[DEFAULT]
# Default log level is INFO
# verbose and debug has the same result.
# One of them will set DEBUG log level output
# debug = True
# verbose = True

# Where to store lock files
lock_path = $state_path/lock

# Radar's working directory. Please ensure that the radar user has
# read/write access to this directory.
# working_directory = ~/.radar

# log_format = %(asctime)s %(levelname)8s [%(name)s] %(message)s
# log_date_format = %Y-%m-%d %H:%M:%S

# use_syslog                           -> syslog
# log_file and log_dir                 -> log_dir/log_file
# (not log_file) and log_dir           -> log_dir/{binary_name}.log
# use_stderr                           -> stderr
# (not user_stderr) and (not log_file) -> stdout
# publish_errors                       -> notification system

# use_syslog = False
# syslog_log_facility = LOG_USER

# use_stderr = True
# log_file =
# log_dir =

# publish_errors = False

# Address to bind the API server
# bind_host = 0.0.0.0

# Port the bind the API server to
# bind_port = 8080

# OpenId Authentication endpoint
# openid_url = https://login.launchpad.net/+openid

# Time in seconds before an access_token expires
# access_token_ttl = 3600

# Time in seconds before an refresh_token expires
# refresh_token_ttl = 604800

# List paging configuration options.
# page_size_maximum = 500
# page_size_default = 100

# Enable notifications. This feature drives deferred processing, reporting,
# and subscriptions.
# enable_notifications = True

[cors]
# W3C CORS configuration. For more information, see http://www.w3.org/TR/cors/

# List of permitted CORS domains.
# allowed_origins = https://radar.openstack.org, http://localhost:9000

# CORS browser options cache max age (in seconds)
# max_age=3600

[notifications]

# Host of the rabbitmq server.
# rabbit_host=localhost

# The RabbitMQ login method
# rabbit_login_method = AMQPLAIN

# The RabbitMQ userid.
# rabbit_userid = guest

# The RabbitMQ password.
# rabbit_password = guest

# The RabbitMQ broker port where a single node is used.
# rabbit_port = 5672

# The virtual host within which our queues and exchanges live.
# rabbit_virtual_host = /

# Application name that binds to rabbit.
# rabbit_application_name=radar

# The name of the topic exchange to which radar will broadcast its events.
# rabbit_exchange_name=radar

# The name of the queue that will be created for API events.
# rabbit_event_queue_name=radar_events

[database]
# This line MUST be changed to actually run radar
# Example:
# connection = mysql://radar:radar@127.0.0.1:3306/radar
# Replace 127.0.0.1 above with the IP address of the database used by the
# main radar server. (Leave it as is if the database runs on this host.)
# connection=sqlite://

# The SQLAlchemy connection string used to connect to the slave database
# slave_connection =

# Database reconnection retry times - in event connectivity is lost
# set to -1 implies an infinite retry count
# max_retries = 10

# Database reconnection interval in seconds - if the initial connection to the
# database fails
# retry_interval = 10

# Minimum number of SQL connections to keep open in a pool
# min_pool_size = 1

# Maximum number of SQL connections to keep open in a pool
# max_pool_size = 10

# Timeout in seconds before idle sql connections are reaped
# idle_timeout = 3600

# If set, use this value for max_overflow with sqlalchemy
# max_overflow = 20

# Verbosity of SQL debugging information. 0=None, 100=Everything
# connection_debug = 100

# Add python stack traces to SQL as comment strings
# connection_trace = True

# If set, use this value for pool_timeout with sqlalchemy
# pool_timeout = 10
